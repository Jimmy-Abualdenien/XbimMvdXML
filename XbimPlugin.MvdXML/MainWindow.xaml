<UserControl x:Class="XbimPlugin.MvdXML.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:viewing="clr-namespace:XbimPlugin.MvdXML.Viewing"    
        
        >
    <UserControl.Resources>
        <ResourceDictionary>
            <!-- Load this specific theme because the Aero theme for CheckBox has issues. -->
            <!--<ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/PresentationFramework.Royale;V3.0.0.0;31bf3856ad364e35;component\themes\royale.normalcolor.xaml" />
            </ResourceDictionary.MergedDictionaries>-->
            <Style x:Key="TreeViewItemStyle" TargetType="TreeViewItem">
                <Setter Property="IsExpanded" Value="False" />
                <Setter Property="IsSelected" Value="{Binding IsInitiallySelected, Mode=OneTime}" />
                <Setter Property="KeyboardNavigation.AcceptsReturn" Value="True" />
                <Setter Property="viewing:VirtualToggleButton.IsVirtualToggleButton" Value="True" />
                <Setter Property="viewing:VirtualToggleButton.IsChecked" Value="{Binding IsChecked}" />
            </Style>

            <HierarchicalDataTemplate x:Key="CheckBoxItemTemplate" ItemsSource="{Binding Children, Mode=OneTime}" >
                <StackPanel Orientation="Horizontal">
                    <!-- These elements are bound to a FooViewModel object. -->
                    <CheckBox Focusable="False"  IsChecked="{Binding IsChecked}" VerticalAlignment="Center" />
                    <ContentPresenter Content="{Binding Name, Mode=OneTime}" Margin="2,0" />
                </StackPanel>
            </HierarchicalDataTemplate>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <Grid>
            <TabControl>
                <TabItem x:Name="File" Header="File" Visibility="{Binding OpenButtonVisibility}">
                    <StackPanel MaxWidth="400">
                        <TextBlock x:Name="PluginVersion" Margin="10" TextAlignment="Center" >PluginVersion</TextBlock>
                        <TextBlock TextWrapping="Wrap" Margin="15" TextAlignment="Left" Foreground="Blue" >
                            Schema version mvdXML V1.1.
                        </TextBlock>
                        <TextBlock TextWrapping="Wrap" Margin="15" TextAlignment="Left" Foreground="Red" >
                            This library is undergoing significant development. Your feedback and engagement is welcome.
                        </TextBlock>
                        <TextBlock TextWrapping="Wrap" Margin="15" TextAlignment="Left" >
                            To provide feedback or getting in touch with the developers, please navigate to our
                            <Hyperlink NavigateUri="https://github.com/xBimTeam/XbimMvdXML/issues" RequestNavigate="Hyperlink_RequestNavigate">official project page</Hyperlink>
                            and raise a new issue. Otherwise, for any urgent matter, please contact 
                            <Hyperlink NavigateUri="mailto:claudio.benghi@gmail.com" RequestNavigate="Hyperlink_RequestNavigate">claudio.benghi@gmail.com</Hyperlink>.
                        </TextBlock>
                        <Button Content="Open MVDxml file" Click="OpenFile" Height="25" Width="200" HorizontalAlignment="Center" />
                    </StackPanel>
                </TabItem>
                <TabItem x:Name="Browse" Header="Browse" Visibility="{Binding UIVisibility}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="5*" />
                            <RowDefinition Height="5*" />
                        </Grid.RowDefinitions>

                        <!-- 
                        todo: http://stackoverflow.com/questions/728205/wpf-listview-attaching-a-double-click-on-an-item-event
                        is this a starting point to attach events to the check/uncheck ?
                        -->
                        <TabControl Grid.Row="0" Margin="5,5,5,10" >
                            <TabItem Header="Exchange Requirements">
                                <TreeView x:Name="ErTree" 
                                        ItemContainerStyle="{StaticResource TreeViewItemStyle}"
                                        ItemTemplate="{StaticResource CheckBoxItemTemplate}"
                                        TreeViewItem.Selected="SetReportRequest" 
                                        />
                            </TabItem>
                            <TabItem Header="Concepts" >

                                <TreeView x:Name="ConceptRootsTree"  
                                        ItemContainerStyle="{StaticResource TreeViewItemStyle}"
                                        ItemTemplate="{StaticResource CheckBoxItemTemplate}"
                                        TreeViewItem.Selected="SetReportRequest" 
                                        
                              />
                            </TabItem>
                            <TabItem Header="Classes">
                                <TreeView x:Name="IfcClassesTree" 
                                        ItemContainerStyle="{StaticResource TreeViewItemStyle}"
                                        ItemTemplate="{StaticResource CheckBoxItemTemplate}"
                                        TreeViewItem.Selected="SetReportRequest" 
                                        />
                            </TabItem>
                        </TabControl>
                        <GridSplitter Grid.Row="0" VerticalAlignment="Bottom" HorizontalAlignment="Stretch" Height="5"/>
                        <Border Grid.Row="1" Margin="5" VerticalAlignment="Top" Height="38"   >
                            <Grid>
                                <ProgressBar Maximum="100" x:Name="TestProgress" Height="10" VerticalAlignment="Top" />
                                <Button Height="25" x:Name="ToggleActivityButton" VerticalAlignment="Bottom" Click="ToggleUpdate" >Update results</Button>
                            </Grid>
                        </Border>
                        <TabControl Grid.Row="1" Margin="5,50,5,5">
                            <TabItem Header="Results" >
                                <Grid>
                                    <TextBlock Margin="3,8">Show:</TextBlock>
                                    <ComboBox SelectionChanged="ChangeShowFilter" Height="26" VerticalAlignment="Top" Margin="60,3,3,3">
                                        <ComboBoxItem Content="All" />
                                        <ComboBoxItem Content="Applicable" IsSelected="True"/>
                                        <ComboBoxItem Content="Pass" />
                                        <ComboBoxItem Content="Fail" />
                                    </ComboBox>
                                    <TextBlock Margin="3,38">Group by:</TextBlock>
                                    <ComboBox SelectionChanged="ChangeGrouping" Height="26" VerticalAlignment="Top" Margin="60,33,3,3">
                                        <ComboBoxItem Content="Element" IsSelected="True"/>
                                        <ComboBoxItem Content="Concept" />
                                        <ComboBoxItem Content="Requirement" />
                                    </ComboBox>
                                    <ListView x:Name="ListResults" Margin="3,62,3,32" SelectionMode="Extended" >
                                        <ListView.ItemContainerStyle>
                                            <Style TargetType="ListViewItem">
                                                <EventSetter Event="MouseDoubleClick" Handler="ShowElement" />
                                            </Style>
                                        </ListView.ItemContainerStyle>

                                        <ListView.GroupStyle>
                                            <GroupStyle>
                                                <GroupStyle.HeaderTemplate>
                                                    <DataTemplate>
                                                        <TextBlock Margin="5" FontWeight="Bold" Text="{Binding Name}"/>
                                                    </DataTemplate>
                                                </GroupStyle.HeaderTemplate>
                                            </GroupStyle>
                                        </ListView.GroupStyle>
                                        <!-- ItemTemplate is later changed programmatically in code -->
                                        <ListView.ItemTemplate>
                                            <DataTemplate>
                                                <WrapPanel>
                                                    <Ellipse Width="10" Height="10" Fill="{Binding CircleBrush}" />
                                                    <TextBlock Text="{Binding ConceptName}" Margin="3,0" />
                                                    <TextBlock Text="{Binding ResultSummary}" FontStyle="Italic" Margin="3,0" />
                                                    <TextBlock Text="on" />
                                                    <TextBlock Text="{Binding EntityDesc}" Margin="3,0" />
                                                    <TextBlock Text="(" />
                                                    <TextBlock Text="{Binding EntityLabel}" />
                                                    <TextBlock Text=")" />
                                                    <TextBlock Text="{Binding InvolvedRequirement}" Margin="3,0" />
                                                </WrapPanel>
                                            </DataTemplate>
                                        </ListView.ItemTemplate>
                                    </ListView>
                                    <Button Click="AddComment" Height="26"  Content="Comment (requires plugin)" VerticalAlignment="Bottom" Margin="3" />
                                </Grid>
                            </TabItem>
                            <TabItem Header="Raw Data">
                                <Grid>
                                    <GroupBox Header="Source" Height="43" VerticalAlignment="Top" >
                                        <StackPanel Orientation="Horizontal">
                                            <RadioButton Margin="5,2" Checked="UpdateDataTableSource" x:Name="DataSourceIsConcepts" GroupName="Source" Content="Concepts" IsChecked="True"/>
                                            <RadioButton Margin="5,2" Checked="UpdateDataTableSource" x:Name="DataSourceIsConceptTemplates" GroupName="Source" Content="Concept templates" />
                                        </StackPanel>
                                    </GroupBox>
                                    <TextBox x:Name="ConceptsFilter" TextChanged="FilterConcepts" Margin="3,47,24,0" VerticalAlignment="Top" Height="24"/>
                                    <Path Width="16" Height="16" VerticalAlignment="Top" Margin="0,51,4,0"  HorizontalAlignment="Right" Stretch="Fill" Fill="DarkGray" Data="F1 M 34.8333,61.75L 34.8333,42.75L 19,20.5833L 57,20.5833L 41.1667,42.75L 41.1667,58.5833L 34.8333,61.75 Z "/>
                                    <ComboBox x:Name="SelectedConcept" Height="24" Margin="3,77,3,0" VerticalAlignment="Top" SelectionChanged="SelectedRawDataConceptChanged"   />
                                    <DataGrid x:Name="SelectedConceptData" Margin="3,104,3,3" AutoGeneratingColumn="ShowUnderscores"  />
                                </Grid>
                            </TabItem>
                            <TabItem Header="Information" Visibility="Collapsed" >
                                <TextBox Margin="3" x:Name="ReportTextBox" TextWrapping="Wrap" Text="" />
                            </TabItem>
                        </TabControl>
                    </Grid>
                </TabItem>
                <TabItem x:Name="Visuals" Header="Visuals" Visibility="{Binding UIVisibility}">
                    <StackPanel>
                        <Button Margin="4,2" Content="Colour model" Click="TrafficLight"/>
                        <GroupBox Header="Legenda" Margin="4,2" >
                            <Grid>
                                <Rectangle Fill="Red" Width="24" Height="14" Margin="5,5,5,5" HorizontalAlignment="Left" VerticalAlignment="Top" />
                                <Rectangle Fill="Orange" Width="24" Height="14" Margin="5,25,5,5" HorizontalAlignment="Left" VerticalAlignment="Top" x:Name="Warnings" MouseLeftButtonDown="WarnToggle" />
                                <Rectangle Fill="LightSkyBlue" Width="24" Height="14" Margin="5,45,5,5" HorizontalAlignment="Left" VerticalAlignment="Top" x:Name="UnMatched" MouseLeftButtonDown="UnMatchedToggle" />
                                <Rectangle Fill="Green" Width="24" Height="14" Margin="5,65,5,5" HorizontalAlignment="Left" VerticalAlignment="Top" />
                                <TextBlock Text="Elements failing validation" Margin="35,5,5,5" />
                                <TextBlock Text="Elements with warnings" Margin="35,25,5,5" />
                                <TextBlock Text="Elements without requirements" Margin="35,45,5,5" />
                                <TextBlock Text="Elements passing validation" Margin="35,65,5,5" />
                                <TextBlock Margin="35,85,5,5" TextWrapping="WrapWithOverflow">
                                                Clicking on the colour box for "Elements with warnings" and "Elements without requirements" toggles their visibility
                                </TextBlock>
                            </Grid>
                        </GroupBox>
                        <Button Margin="4,2" Content="Reset colors" Visibility="Collapsed" Click="ResetStyler"/>
                        <GroupBox Header="Colour settings" Margin="4,2" >
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="1*" />
                                    <RowDefinition Height="1*" />
                                    <RowDefinition Height="1*" />
                                    <RowDefinition Height="1*" />
                                    <RowDefinition Height="1*" />
                                    <RowDefinition Height="1*" />
                                    <RowDefinition Height="1*" />
                                </Grid.RowDefinitions>

                                <TextBlock Grid.Row="0" Grid.Column="0" Text="Selection" Margin="5,2" />
                                <ComboBox x:Name="CmbColorGroup"  Grid.Row="0"  Grid.Column="1" Margin="5,2">
                                    <ComboBoxItem Tag="F" IsSelected="True" >Fail</ComboBoxItem>
                                    <ComboBoxItem Tag="W">Warning</ComboBoxItem>
                                    <ComboBoxItem Tag="N/A">Non applicable</ComboBoxItem>
                                    <ComboBoxItem Tag="P">Pass</ComboBoxItem>
                                </ComboBox>

                                <TextBlock Grid.Row="1" Grid.Column="0" Text="Red" Margin="5,2" />
                                <Slider x:Name="SliderR" ValueChanged="UpdateColor" Grid.Row="1" Grid.Column="1" Minimum="0" Maximum="255" Margin="5,2" />

                                <TextBlock Grid.Row="2" Grid.Column="0" Text="Green" Margin="5,2"  />
                                <Slider x:Name="SliderG" ValueChanged="UpdateColor" Grid.Row="2" Grid.Column="1" Minimum="0" Maximum="255" Margin="5,2" />

                                <TextBlock Grid.Row="3" Grid.Column="0" Text="Blue" Margin="5,2"  />
                                <Slider x:Name="SliderB" ValueChanged="UpdateColor" Grid.Row="3" Grid.Column="1" Minimum="0" Maximum="255" Margin="5,2"  />

                                <TextBlock Grid.Row="4" Grid.Column="0" Text="Alpha" Margin="5,2"  />
                                <Slider x:Name="SliderA" ValueChanged="UpdateColor" Grid.Row="4" Grid.Column="1" Minimum="0" Maximum="255" Margin="5,2"  />

                                <Rectangle Grid.Row="5" Grid.Column="0" Grid.ColumnSpan="2" Height="30" Margin="5,5" >
                                    <Rectangle.Fill>
                                        <DrawingBrush Stretch="None" TileMode="Tile" Viewport="0,0,12,12" ViewportUnits="Absolute">

                                            <!-- a drawing of 4 checkerboard tiles -->
                                            <DrawingBrush.Drawing>
                                                <DrawingGroup>

                                                    <!-- checkerboard background -->
                                                    <GeometryDrawing Brush="White">
                                                        <GeometryDrawing.Geometry>
                                                            <RectangleGeometry Rect="0,0,12,12" />
                                                        </GeometryDrawing.Geometry>
                                                    </GeometryDrawing>

                                                    <!-- two checkerboard foreground tiles -->
                                                    <GeometryDrawing Brush="DarkGray">
                                                        <GeometryDrawing.Geometry>
                                                            <GeometryGroup>
                                                                <RectangleGeometry Rect="0,0,6,6" />
                                                                <RectangleGeometry Rect="6,6,6,6" />
                                                            </GeometryGroup>
                                                        </GeometryDrawing.Geometry>
                                                    </GeometryDrawing>

                                                </DrawingGroup>
                                            </DrawingBrush.Drawing>
                                        </DrawingBrush>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <Rectangle x:Name="ColorDisplay"  Grid.Row="5" Grid.Column="0" Grid.ColumnSpan="2" Height="30" StrokeThickness="2" Stroke="DarkGray" Margin="5,5" />

                                <Button Grid.Row="6" Grid.Column="0" Height="30" Content="Default" Margin="5,5" Click="DefaultColors" />
                                <Button Grid.Row="6" Grid.Column="1" Height="30" Content="Save" Margin="5,5" Click="SaveColors" />
                            </Grid>
                        </GroupBox>
                    </StackPanel>
                </TabItem>
                <TabItem x:Name="Commands" Header="Commands" Visibility="{Binding UIVisibility}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="1*"/>
                        </Grid.RowDefinitions>

                        <Button Margin="4,2" Grid.Row="0"  Content="Close mvdXML file" Click="CloseFile" Height="35" FontWeight="Bold"  />
                        
                        <!--<Button Margin="4,2" Grid.Row="1"  Content="Clear cached results" Click="ClearCache" />-->

                        <Grid Grid.Row="2" KeyDown="txtCommand_KeyDown">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="1*"/>
                                <RowDefinition Height="1*"/>
                            </Grid.RowDefinitions>
                            <Grid Grid.Row="0">
                                <TextBox x:Name="TxtCommand" FontFamily="Lucida Console" AcceptsReturn="True" AutoWordSelection="True" Margin="5,5,5,30" />
                                <Button Content="Run" Margin="5" Click="cmdRun" Height="24" VerticalAlignment="Bottom" />
                            </Grid>

                            <RichTextBox Margin="5,2" x:Name="TxtOut" Grid.Row="1" 
                                        FontFamily="Lucida Console" Background="#FFFFFFE1" 
                                        VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" 
                                        ScrollViewer.CanContentScroll="True"
                                        IsReadOnly="True"
                                        IsDocumentEnabled="True"
                                        >
                                <RichTextBox.Resources>
                                    <Style TargetType="{x:Type Paragraph}">
                                        <Setter Property="Margin" Value="0"/>
                                    </Style>
                                    <Style TargetType="{x:Type Hyperlink}">
                                        <EventSetter Event="RequestNavigate" Handler="Hyperlink_RequestNavigate"/>
                                    </Style>
                                </RichTextBox.Resources>
                            </RichTextBox>
                            <GridSplitter Height="5"  Grid.Row="0" VerticalAlignment="Bottom" HorizontalAlignment="Stretch" />
                        </Grid>
                    </Grid>
                </TabItem>
                <TabItem x:Name="SettingsTab" Header="Settings" Visibility="{Binding UIVisibility}">
                    <StackPanel>
                        <CheckBox x:Name="ChkAdaptSchema" Margin="5" Content="Adapt to model schema." IsChecked="False" Unchecked="AdaptSchemaChanged" Checked="AdaptSchemaChanged"/>
                        <TextBlock Margin="5" TextWrapping="Wrap">
                            When checked, this option will ignore specific references to Ifc2x3 or Ifc4 in the mvdXML and use
                            the model version instead when evaluating class applicability
                        </TextBlock>
                    </StackPanel>
                </TabItem>
            </TabControl>
        </Grid>
    </Grid>
</UserControl>

